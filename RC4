#include <stdio.h>
#include <stdlib.h>
#define N 256

void swap(unsigned char *a, unsigned char *b) {
    unsigned char temp = *a;
    *a = *b;
    *b = temp;
}

void initializeRC4(unsigned char *key, int keyLength, unsigned char S[N]) {
    for (int i = 0; i < N; i++) {
        S[i] = i;
    }
    int j = 0;
    for (int i = 0; i < N; i++) {
        j = (j + S[i] + key[i % keyLength]) % N;
        swap(&S[i], &S[j]);
    }
}

void rc4(unsigned char *input, int inputLength, unsigned char *key, int keyLength, unsigned char *output) {
    unsigned char S[N];
    initializeRC4(key, keyLength, S);
    int i = 0, j = 0;
    for (int k = 0; k < inputLength; k++) {
        i = (i + 1) % N;
        j = (j + S[i]) % N;
        swap(&S[i], &S[j]);
        int t = (S[i] + S[j]) % N;
        output[k] = input[k] ^ S[t];
    }
}

int main() {
    unsigned char key[] = "SecretKey";
    unsigned char input[] = "Hello, RC4!";
    int keyLength = sizeof(key) - 1;
    int inputLength = sizeof(input) - 1;

    unsigned char *output = (unsigned char *)malloc(inputLength);
    if (!output) {
        perror("Memory allocation failed");
        return 1;
    }

    rc4(input, inputLength, key, keyLength, output);

    printf("Original: %s\n", input);
    printf("Encrypted (hex): ");
    for (int i = 0; i < inputLength; i++) {
        printf("%02X ", output[i]);
    }
    printf("\n");

    rc4(output, inputLength, key, keyLength, output);
    printf("Decrypted: %s\n", output);

    free(output);
    return 0;
}
